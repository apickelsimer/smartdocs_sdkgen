<?php

function smartdocs_extend_menu() {
  $items['admin/content/smartdocs/models/%smartdocs_model/download-original/%smartdocs_revision'] = array(
    'title' => 'Download Original',
    'page callback' => 'smartdocs_model_download_original',
    'page arguments' => array(4, 6),
    'access arguments' => array('administer smartdocs content'),
    'file' => 'smartdocs_extend.admin.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function smartdocs_extend_form_smartdocs_revision_detail_alter(&$form, &$form_state, $form_id) {
  $form['verbose'] = array(
    '#prefix' => "<div>",
    '#markup' => "<br>" . l('Download Original Spec', 'admin/content/smartdocs/models/'. arg(4) . '/download-original/' . arg(6), array('attributes' => array('class' => array('button', 'spec-download-link')))),
    '#suffix' => "<br><br></div>",
    '#weight' => 900
  );
}

function smartdocs_extend_smartdocs_model_import($raw_source, $mime_type, $document_format, Apigee\SmartDocs\Model $model, $source) {
  // If JSON - Store locally
  if ($mime_type == "application/json") {
    $uuid = (string) $model->getUuid();
    $revision = ( int ) $model->getLatestRevisionNumber();
    $raw_source = (string) $raw_source;
    db_merge('smartdocs_raw')
      ->key(array('uuid' => $uuid))
      ->fields(array(
        'raw_spec' => $raw_source,
        'spec_format' => $mime_type
      ))
      ->execute();
    db_merge('smartdocs_raw_revisions')
      ->key(array('uuid' => $uuid, 'revision' => $revision))
      ->fields(array(
        'raw_spec' => $raw_source,
        'spec_format' => $mime_type
      ))
      ->execute();
  }
}


function smartdocs_extend_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'smart_method' && $view_mode == 'full') {
    $model_name = db_select('smartdata', 's')
      ->condition('nid', $node->nid)
      ->fields('s', array('model'))
      ->execute()
      ->fetchField();
    $model = smartdocs_model_load($model_name);
    $mid = $model['id'];
    // Load Spec
    $raw_spec = db_select('smartdocs_raw', 'sr')
      ->condition('uuid', $mid)
      ->fields('sr')
      ->execute()
      ->fetchAll();
    if (count($raw_spec) && $raw_spec[0]->spec_format == 'application/json') {
      $path_items = field_get_items('node', $node, 'field_smart_method_resource_path', $langcode = NULL);
      $path = $path_items[0]['value'];
      $verb_items = field_get_items('node', $node, 'field_smart_method_verb', $langcode = NULL);
      $verb = strtolower($verb_items[0]['taxonomy_term']->name);
      // Retrieve the spec and associated definitions from raw spec.
      $open_api = drupal_json_decode($raw_spec[0]->raw_spec);
      $api_spec = $open_api['paths'][$path][$verb];
      $definitions = $open_api['definitions'];
      // Inject this into page as javascript....
      $open_api_raw_spec = array();
      $open_api_raw_spec['path_info'] = $api_spec;
      $open_api_raw_spec['spec_definitions'] = $definitions;
      $model_open_api_raw_spec_string = drupal_json_encode($open_api_raw_spec);
      $open_api_raw_spec_string = drupal_json_encode($open_api);
      $jscript_embed = "var model_api_raw_spec = '" . $model_open_api_raw_spec_string . "';";
      $jscript_full_embed = "var api_raw_spec = '" . $open_api_raw_spec_string . "';";
      drupal_add_js($jscript_embed, array(
        'type' => 'inline',
        'scope' => 'header',
        'weight' => -100,
      ));
      drupal_add_js($jscript_full_embed, array(
        'type' => 'inline',
        'scope' => 'header',
        'weight' => -100,
      ));
    }
  }
}


function smartdocs_extend_js_alter(&$javascript) {
  $version = variable_get('smartdocs_local_asset_version', '6');
  $path = drupal_get_path('module', 'smartdocs');
  $javascript[$path . '/local/js/v' . $version . '/model.js']['data'] =  drupal_get_path('module', 'smartdocs_extend') . "/js/model.js";
  // Swap out jQuery to use an updated version of the library.

}
